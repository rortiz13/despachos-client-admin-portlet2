/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package la.netco.despachos_judiciales.entities.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Circuito service. Represents a row in the &quot;GLO_CIRCUITOS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link la.netco.despachos_judiciales.entities.model.impl.CircuitoModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link la.netco.despachos_judiciales.entities.model.impl.CircuitoImpl}.
 * </p>
 *
 * @author mariza
 * @see Circuito
 * @see la.netco.despachos_judiciales.entities.model.impl.CircuitoImpl
 * @see la.netco.despachos_judiciales.entities.model.impl.CircuitoModelImpl
 * @generated
 */
public interface CircuitoModel extends BaseModel<Circuito> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a circuito model instance should use the {@link Circuito} interface instead.
	 */

	/**
	 * Returns the primary key of this circuito.
	 *
	 * @return the primary key of this circuito
	 */
	public int getPrimaryKey();

	/**
	 * Sets the primary key of this circuito.
	 *
	 * @param primaryKey the primary key of this circuito
	 */
	public void setPrimaryKey(int primaryKey);

	/**
	 * Returns the codigo of this circuito.
	 *
	 * @return the codigo of this circuito
	 */
	public int getCodigo();

	/**
	 * Sets the codigo of this circuito.
	 *
	 * @param codigo the codigo of this circuito
	 */
	public void setCodigo(int codigo);

	/**
	 * Returns the nombre of this circuito.
	 *
	 * @return the nombre of this circuito
	 */
	@AutoEscape
	public String getNombre();

	/**
	 * Sets the nombre of this circuito.
	 *
	 * @param nombre the nombre of this circuito
	 */
	public void setNombre(String nombre);

	/**
	 * Returns the id distrito of this circuito.
	 *
	 * @return the id distrito of this circuito
	 */
	public int getIdDistrito();

	/**
	 * Sets the id distrito of this circuito.
	 *
	 * @param idDistrito the id distrito of this circuito
	 */
	public void setIdDistrito(int idDistrito);

	/**
	 * Returns the jurisdiccion of this circuito.
	 *
	 * @return the jurisdiccion of this circuito
	 */
	@AutoEscape
	public String getJurisdiccion();

	/**
	 * Sets the jurisdiccion of this circuito.
	 *
	 * @param jurisdiccion the jurisdiccion of this circuito
	 */
	public void setJurisdiccion(String jurisdiccion);

	/**
	 * Returns the codigo_dane of this circuito.
	 *
	 * @return the codigo_dane of this circuito
	 */
	@AutoEscape
	public String getCodigo_dane();

	/**
	 * Sets the codigo_dane of this circuito.
	 *
	 * @param codigo_dane the codigo_dane of this circuito
	 */
	public void setCodigo_dane(String codigo_dane);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Circuito circuito);

	public int hashCode();

	public CacheModel<Circuito> toCacheModel();

	public Circuito toEscapedModel();

	public String toString();

	public String toXmlString();
}