/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package la.netco.despachos_judiciales.entities.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import la.netco.despachos_judiciales.entities.model.RelacionUsuarioConsejo;
import la.netco.despachos_judiciales.entities.model.RelacionUsuarioConsejoModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RelacionUsuarioConsejo service. Represents a row in the &quot;REL_USUARIO_CONSEJOS_SEC&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link la.netco.despachos_judiciales.entities.model.RelacionUsuarioConsejoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RelacionUsuarioConsejoImpl}.
 * </p>
 *
 * @author mariza
 * @see RelacionUsuarioConsejoImpl
 * @see la.netco.despachos_judiciales.entities.model.RelacionUsuarioConsejo
 * @see la.netco.despachos_judiciales.entities.model.RelacionUsuarioConsejoModel
 * @generated
 */
public class RelacionUsuarioConsejoModelImpl extends BaseModelImpl<RelacionUsuarioConsejo>
	implements RelacionUsuarioConsejoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a relacion usuario consejo model instance should use the {@link la.netco.despachos_judiciales.entities.model.RelacionUsuarioConsejo} interface instead.
	 */
	public static final String TABLE_NAME = "REL_USUARIO_CONSEJOS_SEC";
	public static final Object[][] TABLE_COLUMNS = {
			{ "UCS_CONSEJO_SEC", Types.INTEGER },
			{ "UCS_USUARIO_PORTAL", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table REL_USUARIO_CONSEJOS_SEC (UCS_CONSEJO_SEC INTEGER not null primary key,UCS_USUARIO_PORTAL VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table REL_USUARIO_CONSEJOS_SEC";
	public static final String DATA_SOURCE = "csjDespachosDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.la.netco.despachos_judiciales.entities.model.RelacionUsuarioConsejo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.la.netco.despachos_judiciales.entities.model.RelacionUsuarioConsejo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.la.netco.despachos_judiciales.entities.model.RelacionUsuarioConsejo"));

	public RelacionUsuarioConsejoModelImpl() {
	}

	public int getPrimaryKey() {
		return _idConsejoSec;
	}

	public void setPrimaryKey(int primaryKey) {
		setIdConsejoSec(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Integer(_idConsejoSec);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	public Class<?> getModelClass() {
		return RelacionUsuarioConsejo.class;
	}

	public String getModelClassName() {
		return RelacionUsuarioConsejo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("idConsejoSec", getIdConsejoSec());
		attributes.put("usuarioPortal", getUsuarioPortal());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer idConsejoSec = (Integer)attributes.get("idConsejoSec");

		if (idConsejoSec != null) {
			setIdConsejoSec(idConsejoSec);
		}

		String usuarioPortal = (String)attributes.get("usuarioPortal");

		if (usuarioPortal != null) {
			setUsuarioPortal(usuarioPortal);
		}
	}

	public int getIdConsejoSec() {
		return _idConsejoSec;
	}

	public void setIdConsejoSec(int idConsejoSec) {
		_idConsejoSec = idConsejoSec;
	}

	public String getUsuarioPortal() {
		if (_usuarioPortal == null) {
			return StringPool.BLANK;
		}
		else {
			return _usuarioPortal;
		}
	}

	public void setUsuarioPortal(String usuarioPortal) {
		_usuarioPortal = usuarioPortal;
	}

	@Override
	public RelacionUsuarioConsejo toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (RelacionUsuarioConsejo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		RelacionUsuarioConsejoImpl relacionUsuarioConsejoImpl = new RelacionUsuarioConsejoImpl();

		relacionUsuarioConsejoImpl.setIdConsejoSec(getIdConsejoSec());
		relacionUsuarioConsejoImpl.setUsuarioPortal(getUsuarioPortal());

		relacionUsuarioConsejoImpl.resetOriginalValues();

		return relacionUsuarioConsejoImpl;
	}

	public int compareTo(RelacionUsuarioConsejo relacionUsuarioConsejo) {
		int primaryKey = relacionUsuarioConsejo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		RelacionUsuarioConsejo relacionUsuarioConsejo = null;

		try {
			relacionUsuarioConsejo = (RelacionUsuarioConsejo)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		int primaryKey = relacionUsuarioConsejo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<RelacionUsuarioConsejo> toCacheModel() {
		RelacionUsuarioConsejoCacheModel relacionUsuarioConsejoCacheModel = new RelacionUsuarioConsejoCacheModel();

		relacionUsuarioConsejoCacheModel.idConsejoSec = getIdConsejoSec();

		relacionUsuarioConsejoCacheModel.usuarioPortal = getUsuarioPortal();

		String usuarioPortal = relacionUsuarioConsejoCacheModel.usuarioPortal;

		if ((usuarioPortal != null) && (usuarioPortal.length() == 0)) {
			relacionUsuarioConsejoCacheModel.usuarioPortal = null;
		}

		return relacionUsuarioConsejoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{idConsejoSec=");
		sb.append(getIdConsejoSec());
		sb.append(", usuarioPortal=");
		sb.append(getUsuarioPortal());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append(
			"la.netco.despachos_judiciales.entities.model.RelacionUsuarioConsejo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>idConsejoSec</column-name><column-value><![CDATA[");
		sb.append(getIdConsejoSec());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuarioPortal</column-name><column-value><![CDATA[");
		sb.append(getUsuarioPortal());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = RelacionUsuarioConsejo.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			RelacionUsuarioConsejo.class
		};
	private int _idConsejoSec;
	private String _usuarioPortal;
	private RelacionUsuarioConsejo _escapedModelProxy;
}